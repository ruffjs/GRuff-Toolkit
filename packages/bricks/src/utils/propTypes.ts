export const PropTypes = {
  Boolean,
  Number,
  String,
  Array,
  Object,
  Bool: [Boolean],
  Numb: [Number],
  Text: [String],
  List: [Array],
  IncludeObject: [Object],
  Boollike: [Boolean, String],
  Booleanlike: [Boolean, Number, String],
  Numberish: [Number, String],
  Strings: [String, Array],
  MultiPixel: [Number, String, Array],
  All: [Number, String, Object, Array],
  Obj: [Object, Array],
}

export const flexPropType = {
  alignContent: PropTypes.Text,
  alignItems: PropTypes.Text,
  flexDirection: PropTypes.Text,
  flexWrap: PropTypes.Text,
  justifyContent: PropTypes.Text,
  justifyItems: PropTypes.Text,
  gap: PropTypes.Numberish,
  row: PropTypes.Boollike,
  column: PropTypes.Boollike,
  direction: PropTypes.Text,
  center: PropTypes.Boollike,
  align: PropTypes.Strings,
  justify: PropTypes.Text,
  items: PropTypes.Text,
}
export const flexItemPropType = {
  alignSelf: PropTypes.Text,
  flex: PropTypes.Numberish,
  order: [Number],
}
export const paddingPropType = {
  padding: PropTypes.MultiPixel,
  paddingV: PropTypes.Numberish,
  paddingH: PropTypes.Numberish,
  paddingTop: PropTypes.Numberish,
  paddingRight: PropTypes.Numberish,
  paddingBottom: PropTypes.Numberish,
  paddingLeft: PropTypes.Numberish,
  paddingBlock: PropTypes.MultiPixel,
  paddingInline: PropTypes.MultiPixel,
  paddingBlockStart: PropTypes.Numberish,
  paddingBlockEnd: PropTypes.Numberish,
  paddingInlineStart: PropTypes.Numberish,
  paddingInlineEnd: PropTypes.Numberish,
}
export const borderPropType = {
  padding: PropTypes.MultiPixel,
  paddingV: PropTypes.Numberish,
  paddingH: PropTypes.Numberish,
  paddingTop: PropTypes.Numberish,
  paddingRight: PropTypes.Numberish,
  paddingBottom: PropTypes.Numberish,
  paddingLeft: PropTypes.Numberish,
  border: PropTypes.MultiPixel,
  borderV: PropTypes.MultiPixel,
  borderH: PropTypes.MultiPixel,
  borderTop: PropTypes.MultiPixel,
  borderTopWidth: PropTypes.Numberish,
  borderTopColor: PropTypes.Text,
  borderTopStyle: PropTypes.Text,
  borderRight: PropTypes.MultiPixel,
  borderRightWidth: PropTypes.Numberish,
  borderRightColor: PropTypes.Text,
  borderRightStyle: PropTypes.Text,
  borderBottom: PropTypes.MultiPixel,
  borderBottomWidth: PropTypes.Numberish,
  borderBottomColor: PropTypes.Text,
  borderBottomStyle: PropTypes.Text,
  borderLeft: PropTypes.MultiPixel,
  borderLeftWidth: PropTypes.Numberish,
  borderLeftColor: PropTypes.Text,
  borderLeftStyle: PropTypes.Text,
  borderBlock: PropTypes.MultiPixel,
  borderInline: PropTypes.MultiPixel,
  borderBlockStart: PropTypes.MultiPixel,
  borderBlockStartWidth: PropTypes.Numberish,
  borderBlockStartColor: PropTypes.Text,
  borderBlockStartStyle: PropTypes.Text,
  borderBlockEnd: PropTypes.MultiPixel,
  borderBlockEndWidth: PropTypes.Numberish,
  borderBlockEndColor: PropTypes.Text,
  borderBlockEndStyle: PropTypes.Text,
  borderInlineStart: PropTypes.MultiPixel,
  borderInlineStartWidth: PropTypes.Numberish,
  borderInlineStartColor: PropTypes.Text,
  borderInlineStartStyle: PropTypes.Text,
  borderInlineEnd: PropTypes.MultiPixel,
  borderInlineEndWidth: PropTypes.Numberish,
  borderInlineEndColor: PropTypes.Text,
  borderInlineEndStyle: PropTypes.Text,
}
export const marginPropType = {
  margin: PropTypes.MultiPixel,
  marginV: PropTypes.Numberish,
  marginH: PropTypes.Numberish,
  marginTop: PropTypes.Numberish,
  marginRight: PropTypes.Numberish,
  marginBottom: PropTypes.Numberish,
  marginLeft: PropTypes.Numberish,
  marginBlock: PropTypes.MultiPixel,
  marginInline: PropTypes.MultiPixel,
  marginBlockStart: PropTypes.Numberish,
  marginBlockEnd: PropTypes.Numberish,
  marginInlineStart: PropTypes.Numberish,
  marginInlineEnd: PropTypes.Numberish,
}
export const roundPropType = {
  round: PropTypes.Booleanlike,
  roundTop: PropTypes.Numberish,
  roundRight: PropTypes.Numberish,
  roundBottom: PropTypes.Numberish,
  roundLeft: PropTypes.Numberish,
  roundTL: PropTypes.Numberish,
  roundTR: PropTypes.Numberish,
  roundBL: PropTypes.Numberish,
  roundBR: PropTypes.Numberish,
  roundSS: PropTypes.Numberish,
  roundSE: PropTypes.Numberish,
  roundES: PropTypes.Numberish,
  roundEE: PropTypes.Numberish,
}
export const sizePropType = {
  minWidth: PropTypes.Numberish,
  width: PropTypes.Numberish,
  maxWidth: PropTypes.Numberish,
  minHeight: PropTypes.Numberish,
  height: PropTypes.Numberish,
  maxHeight: PropTypes.Numberish,
}
export const bgPropType = {
  background: PropTypes.Text,
  backgroundColor: PropTypes.Text,
  backgroundImage: PropTypes.Text,
  backgroundRepeat: PropTypes.Text,
  backgroundSize: PropTypes.MultiPixel,
  backgroundPosition: PropTypes.MultiPixel,
}

export const descPropType = {
  overflow: PropTypes.Text,
  cursor: PropTypes.Text,
  pointer: PropTypes.Bool,
}

export const TextFontPropType = {
  family: PropTypes.Text,
  size: PropTypes.Numberish,
  weight: PropTypes.Numberish,
  style: PropTypes.Text,
  smooth: PropTypes.Text,
  stretch: PropTypes.Text,
  variant: PropTypes.Text,
  kerning: PropTypes.Text,
  synthesis: PropTypes.Text,
  opticalSizing: PropTypes.Text,
}

export const TextTypePropType = {
  align: PropTypes.Text,
  alignLast: PropTypes.Text,
  decoration: PropTypes.Text,
  descStyle: PropTypes.Text,
  descWidth: PropTypes.Numberish,
  combineUpright: PropTypes.Text,
  emphasis: PropTypes.Text,
  emphasisColor: PropTypes.Text,
  emphasisPosition: PropTypes.Text,
  emphasisStyle: PropTypes.Text,
  indent: PropTypes.Numberish,
  justify: PropTypes.Text,
  orientation: PropTypes.Text,
  overflow: PropTypes.Text,
  rendering: PropTypes.Text,
  shadow: PropTypes.Text,
  adjust: PropTypes.Text,
  transform: PropTypes.Text,
  underlineOffset: PropTypes.Text,
  underlinePosition: PropTypes.Text,
}

export const TextBoxPropType = {
  lineHeight: PropTypes.Numberish,
  color: PropTypes.Text,
  spacing: PropTypes.Numberish,
}
